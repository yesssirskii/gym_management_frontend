{
  "version": 3,
  "sources": ["../../../../../node_modules/@ngx-translate/core/fesm2022/ngx-translate-core.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, inject, ElementRef, ChangeDetectorRef, Input, Directive, Pipe, NgModule } from '@angular/core';\nimport { of, Subject, isObservable, forkJoin, concat, defer } from 'rxjs';\nimport { take, shareReplay, map, concatMap, switchMap } from 'rxjs/operators';\nfunction _(key) {\n  return key;\n}\nclass MissingTranslationHandler {}\n/**\n * This handler is just a placeholder that does nothing; in case you don't need a missing translation handler at all\n */\nclass DefaultMissingTranslationHandler {\n  handle(params) {\n    return params.key;\n  }\n  static ɵfac = function DefaultMissingTranslationHandler_Factory(t) {\n    return new (t || DefaultMissingTranslationHandler)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DefaultMissingTranslationHandler,\n    factory: DefaultMissingTranslationHandler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultMissingTranslationHandler, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TranslateCompiler {}\n/**\n * This compiler is just a placeholder that does nothing; in case you don't need a compiler at all\n */\nclass TranslateNoOpCompiler extends TranslateCompiler {\n  compile(value, lang) {\n    void lang;\n    return value;\n  }\n  compileTranslations(translations, lang) {\n    void lang;\n    return translations;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateNoOpCompiler_BaseFactory;\n    return function TranslateNoOpCompiler_Factory(t) {\n      return (ɵTranslateNoOpCompiler_BaseFactory || (ɵTranslateNoOpCompiler_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateNoOpCompiler)))(t || TranslateNoOpCompiler);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateNoOpCompiler,\n    factory: TranslateNoOpCompiler.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateNoOpCompiler, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TranslateLoader {}\n/**\n * This loader is just a placeholder that does nothing; in case you don't need a loader at all\n */\nclass TranslateNoOpLoader extends TranslateLoader {\n  getTranslation(lang) {\n    void lang;\n    return of({});\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateNoOpLoader_BaseFactory;\n    return function TranslateNoOpLoader_Factory(t) {\n      return (ɵTranslateNoOpLoader_BaseFactory || (ɵTranslateNoOpLoader_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateNoOpLoader)))(t || TranslateNoOpLoader);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateNoOpLoader,\n    factory: TranslateNoOpLoader.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateNoOpLoader, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Determines if two objects or two values are equivalent.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `equals`.\n *\n * @param o1 Object or value to compare.\n * @param o2 Object or value to compare.\n * @returns true if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  const t1 = typeof o1,\n    t2 = typeof o2;\n  let length;\n  if (t1 == t2 && t1 == \"object\") {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) return false;\n      if ((length = o1.length) == o2.length) {\n        for (let key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) return false;\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      if (isDict(o1) && isDict(o2)) {\n        const keySet = Object.create(null);\n        for (const key in o1) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n          keySet[key] = true;\n        }\n        for (const key in o2) {\n          if (!(key in keySet) && typeof o2[key] !== \"undefined\") {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isDefinedAndNotNull(value) {\n  return typeof value !== \"undefined\" && value !== null;\n}\nfunction isDefined(value) {\n  return value !== undefined;\n}\nfunction isDict(value) {\n  return isObject(value) && !isArray(value) && value !== null;\n}\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction cloneDeep(value) {\n  if (isArray(value)) {\n    return value.map(item => cloneDeep(item));\n  } else if (isDict(value)) {\n    const cloned = {};\n    Object.keys(value).forEach(key => {\n      cloned[key] = cloneDeep(value[key]);\n    });\n    return cloned;\n  } else {\n    return value;\n  }\n}\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction mergeDeep(target, source) {\n  if (!isObject(target)) {\n    return cloneDeep(source);\n  }\n  const output = cloneDeep(target);\n  if (isObject(output) && isObject(source)) {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    Object.keys(source).forEach(key => {\n      if (isDict(source[key])) {\n        if (key in target) {\n          output[key] = mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(output, {\n            [key]: source[key]\n          });\n        }\n      } else {\n        Object.assign(output, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n  return output;\n}\n/**\n * Retrieves a value from a nested object using a dot-separated key path.\n *\n * Example usage:\n * ```ts\n * getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA'); // returns 'valueI'\n * ```\n *\n * @param target The source object from which to retrieve the value.\n * @param key Dot-separated key path specifying the value to retrieve.\n * @returns The value at the specified key path, or `undefined` if not found.\n */\nfunction getValue(target, key) {\n  const keys = key.split(\".\");\n  key = \"\";\n  do {\n    key += keys.shift();\n    const isLastKey = !keys.length;\n    if (isDefinedAndNotNull(target)) {\n      if (isDict(target) && isDefined(target[key]) && (isDict(target[key]) || isArray(target[key]) || isLastKey)) {\n        target = target[key];\n        key = \"\";\n        continue;\n      }\n      if (isArray(target)) {\n        const index = parseInt(key, 10);\n        if (isDefined(target[index]) && (isDict(target[index]) || isArray(target[index]) || isLastKey)) {\n          target = target[index];\n          key = \"\";\n          continue;\n        }\n      }\n    }\n    if (isLastKey) {\n      target = undefined;\n      continue;\n    }\n    key += \".\";\n  } while (keys.length);\n  return target;\n}\n/**\n * Sets a value on object using a dot separated key.\n * This function modifies the object in place\n * parser.setValue({a:{b:{c: \"test\"}}}, 'a.b.c', \"test2\") ==> {a:{b:{c: \"test2\"}}}\n * @param target an object\n * @param key E.g. \"a.b.c\"\n * @param value to set\n * @deprecated use insertValue() instead\n */\nfunction setValue(target, key, value) {\n  const keys = key.split(\".\");\n  let current = target;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (i === keys.length - 1) {\n      current[key] = value;\n    } else {\n      current = current[key] && isDict(current[key]) ? current[key] : {};\n    }\n  }\n}\n/**\n * Sets a value on object using a dot separated key.\n * Returns a clone of the object without modifying it\n * parser.setValue({a:{b:{c: \"test\"}}}, 'a.b.c', \"test2\") ==> {a:{b:{c: \"test2\"}}}\n * @param target an object\n * @param key E.g. \"a.b.c\"\n * @param value to set\n */\nfunction insertValue(target, key, value) {\n  return mergeDeep(target, createNestedObject(key, value));\n}\nfunction createNestedObject(dotSeparatedKey, value) {\n  return dotSeparatedKey.split(\".\").reduceRight((acc, key) => ({\n    [key]: acc\n  }), value);\n}\nclass TranslateParser {}\nclass TranslateDefaultParser extends TranslateParser {\n  templateMatcher = /{{\\s?([^{}\\s]*)\\s?}}/g;\n  interpolate(expr, params) {\n    if (isString(expr)) {\n      return this.interpolateString(expr, params);\n    } else if (isFunction(expr)) {\n      return this.interpolateFunction(expr, params);\n    }\n    return undefined;\n  }\n  interpolateFunction(fn, params) {\n    return fn(params);\n  }\n  interpolateString(expr, params) {\n    if (!params) {\n      return expr;\n    }\n    return expr.replace(this.templateMatcher, (substring, key) => {\n      const replacement = this.getInterpolationReplacement(params, key);\n      return replacement !== undefined ? replacement : substring;\n    });\n  }\n  /**\n   * Returns the replacement for an interpolation parameter\n   * @params:\n   */\n  getInterpolationReplacement(params, key) {\n    return this.formatValue(getValue(params, key));\n  }\n  /**\n   * Converts a value into a useful string representation.\n   * @param value The value to format.\n   * @returns A string representation of the value.\n   */\n  formatValue(value) {\n    if (isString(value)) {\n      return value;\n    }\n    if (typeof value === \"number\" || typeof value === \"boolean\") {\n      return value.toString();\n    }\n    if (value === null) {\n      return \"null\";\n    }\n    if (isArray(value)) {\n      return value.join(\", \");\n    }\n    if (isObject(value)) {\n      if (typeof value.toString === \"function\" && value.toString !== Object.prototype.toString) {\n        return value.toString();\n      }\n      return JSON.stringify(value); // Pretty-print JSON if no meaningful toString()\n    }\n    return undefined;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTranslateDefaultParser_BaseFactory;\n    return function TranslateDefaultParser_Factory(t) {\n      return (ɵTranslateDefaultParser_BaseFactory || (ɵTranslateDefaultParser_BaseFactory = i0.ɵɵgetInheritedFactory(TranslateDefaultParser)))(t || TranslateDefaultParser);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateDefaultParser,\n    factory: TranslateDefaultParser.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateDefaultParser, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TranslateStore {\n  _onTranslationChange = new Subject();\n  _onLangChange = new Subject();\n  _onFallbackLangChange = new Subject();\n  fallbackLang = null;\n  currentLang;\n  translations = {};\n  languages = [];\n  getTranslations(language) {\n    return this.translations[language];\n  }\n  setTranslations(language, translations, extend) {\n    this.translations[language] = extend && this.hasTranslationFor(language) ? mergeDeep(this.translations[language], translations) : translations;\n    this.addLanguages([language]);\n    this._onTranslationChange.next({\n      lang: language,\n      translations: this.getTranslations(language)\n    });\n  }\n  getLanguages() {\n    return this.languages;\n  }\n  getCurrentLang() {\n    return this.currentLang;\n  }\n  getFallbackLang() {\n    return this.fallbackLang;\n  }\n  /**\n   * Changes the fallback lang\n   */\n  setFallbackLang(lang, emitChange = true) {\n    this.fallbackLang = lang;\n    if (emitChange) {\n      this._onFallbackLangChange.next({\n        lang: lang,\n        translations: this.translations[lang]\n      });\n    }\n  }\n  setCurrentLang(lang, emitChange = true) {\n    this.currentLang = lang;\n    if (emitChange) {\n      this._onLangChange.next({\n        lang: lang,\n        translations: this.translations[lang]\n      });\n    }\n  }\n  /**\n   * An Observable to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onTranslationChange() {\n    return this._onTranslationChange.asObservable();\n  }\n  /**\n   * An Observable to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onLangChange() {\n    return this._onLangChange.asObservable();\n  }\n  /**\n   * An Observable to listen to fallback lang change events\n   * onFallbackLangChange.subscribe((params: FallbackLangChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onFallbackLangChange() {\n    return this._onFallbackLangChange.asObservable();\n  }\n  addLanguages(languages) {\n    this.languages = Array.from(new Set([...this.languages, ...languages]));\n  }\n  hasTranslationFor(lang) {\n    return typeof this.translations[lang] !== \"undefined\";\n  }\n  deleteTranslations(lang) {\n    delete this.translations[lang];\n  }\n  getTranslation(key) {\n    let text = this.getValue(this.currentLang, key);\n    if (text === undefined && this.fallbackLang != null && this.fallbackLang !== this.currentLang) {\n      text = this.getValue(this.fallbackLang, key);\n    }\n    return text;\n  }\n  getValue(language, key) {\n    return getValue(this.getTranslations(language), key);\n  }\n  static ɵfac = function TranslateStore_Factory(t) {\n    return new (t || TranslateStore)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateStore,\n    factory: TranslateStore.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateStore, [{\n    type: Injectable\n  }], null, null);\n})();\nconst TRANSLATE_SERVICE_CONFIG = new InjectionToken(\"TRANSLATE_CONFIG\");\nconst makeObservable = value => {\n  return isObservable(value) ? value : of(value);\n};\nclass ITranslateService {}\nclass TranslateService {\n  loadingTranslations;\n  pending = false;\n  _translationRequests = {};\n  lastUseLanguage = null;\n  currentLoader = inject(TranslateLoader);\n  compiler = inject(TranslateCompiler);\n  parser = inject(TranslateParser);\n  missingTranslationHandler = inject(MissingTranslationHandler);\n  store = inject(TranslateStore);\n  extend = false;\n  /**\n   * An Observable to listen to translation change events\n   * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onTranslationChange() {\n    return this.store.onTranslationChange;\n  }\n  /**\n   * An Observable to listen to lang change events\n   * onLangChange.subscribe((params: LangChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onLangChange() {\n    return this.store.onLangChange;\n  }\n  /**\n   * An Observable to listen to fallback lang change events\n   * onFallbackLangChange.subscribe((params: FallbackLangChangeEvent) => {\n   *     // do something\n   * });\n   */\n  get onFallbackLangChange() {\n    return this.store.onFallbackLangChange;\n  }\n  /**\n   * @deprecated Use onFallbackLangChange() instead\n   */\n  get onDefaultLangChange() {\n    return this.store.onFallbackLangChange;\n  }\n  constructor() {\n    const config = {\n      extend: false,\n      fallbackLang: null,\n      ...inject(TRANSLATE_SERVICE_CONFIG, {\n        optional: true\n      })\n    };\n    if (config.lang) {\n      this.use(config.lang);\n    }\n    if (config.fallbackLang) {\n      this.setFallbackLang(config.fallbackLang);\n    }\n    if (config.extend) {\n      this.extend = true;\n    }\n  }\n  /**\n   * Sets the fallback language to use if a translation is not found in the\n   * current language\n   */\n  setFallbackLang(lang) {\n    if (!this.getFallbackLang()) {\n      // on init set the fallbackLang immediately, but do not emit a change yet\n      this.store.setFallbackLang(lang, false);\n    }\n    const pending = this.loadOrExtendLanguage(lang);\n    if (isObservable(pending)) {\n      pending.pipe(take(1)).subscribe({\n        next: () => {\n          this.store.setFallbackLang(lang);\n        },\n        error: () => {\n          /* ignore here - user can handle it */\n        }\n      });\n      return pending;\n    }\n    this.store.setFallbackLang(lang);\n    return of(this.store.getTranslations(lang));\n  }\n  /**\n   * Changes the lang currently used\n   */\n  use(lang) {\n    // remember the language that was called\n    // we need this with multiple fast calls to use()\n    // where translation loads might complete in random order\n    this.lastUseLanguage = lang;\n    if (!this.getCurrentLang()) {\n      // on init set the currentLang immediately, but do not emit a change yet\n      this.store.setCurrentLang(lang, false);\n    }\n    const pending = this.loadOrExtendLanguage(lang);\n    if (isObservable(pending)) {\n      pending.pipe(take(1)).subscribe({\n        next: () => {\n          this.changeLang(lang);\n        },\n        error: () => {\n          /* ignore here - use can handle it */\n        }\n      });\n      return pending;\n    }\n    this.changeLang(lang);\n    return of(this.store.getTranslations(lang));\n  }\n  /**\n   * Retrieves the given translations\n   */\n  loadOrExtendLanguage(lang) {\n    // if this language is unavailable or extend is true, ask for it\n    if (!this.store.hasTranslationFor(lang) || this.extend) {\n      this._translationRequests[lang] = this._translationRequests[lang] || this.loadAndCompileTranslations(lang);\n      return this._translationRequests[lang];\n    }\n    return undefined;\n  }\n  /**\n   * Changes the current lang\n   */\n  changeLang(lang) {\n    if (lang !== this.lastUseLanguage) {\n      // received new language data,\n      // but this was not the one requested last\n      return;\n    }\n    this.store.setCurrentLang(lang);\n  }\n  getCurrentLang() {\n    return this.store.getCurrentLang();\n  }\n  loadAndCompileTranslations(lang) {\n    this.pending = true;\n    const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(shareReplay(1), take(1));\n    this.loadingTranslations = loadingTranslations.pipe(map(res => this.compiler.compileTranslations(res, lang)), shareReplay(1), take(1));\n    this.loadingTranslations.subscribe({\n      next: res => {\n        this.store.setTranslations(lang, res, this.extend);\n        this.pending = false;\n      },\n      error: err => {\n        void err;\n        this.pending = false;\n      }\n    });\n    return loadingTranslations;\n  }\n  /**\n   * Manually sets an object of translations for a given language\n   * after passing it through the compiler\n   */\n  setTranslation(lang, translations, shouldMerge = false) {\n    const interpolatableTranslations = this.compiler.compileTranslations(translations, lang);\n    this.store.setTranslations(lang, interpolatableTranslations, shouldMerge || this.extend);\n  }\n  getLangs() {\n    return this.store.getLanguages();\n  }\n  /**\n   * Add available languages\n   */\n  addLangs(languages) {\n    this.store.addLanguages(languages);\n  }\n  getParsedResultForKey(key, interpolateParams) {\n    const textToInterpolate = this.getTextToInterpolate(key);\n    if (isDefinedAndNotNull(textToInterpolate)) {\n      return this.runInterpolation(textToInterpolate, interpolateParams);\n    }\n    const res = this.missingTranslationHandler.handle({\n      key,\n      translateService: this,\n      ...(interpolateParams !== undefined && {\n        interpolateParams\n      })\n    });\n    return res !== undefined ? res : key;\n  }\n  /**\n   * Gets the fallback language. null if none is defined\n   */\n  getFallbackLang() {\n    return this.store.getFallbackLang();\n  }\n  getTextToInterpolate(key) {\n    return this.store.getTranslation(key);\n  }\n  runInterpolation(translations, interpolateParams) {\n    if (!isDefinedAndNotNull(translations)) {\n      return;\n    }\n    if (isArray(translations)) {\n      return this.runInterpolationOnArray(translations, interpolateParams);\n    }\n    if (isDict(translations)) {\n      return this.runInterpolationOnDict(translations, interpolateParams);\n    }\n    return this.parser.interpolate(translations, interpolateParams);\n  }\n  runInterpolationOnArray(translations, interpolateParams) {\n    return translations.map(translation => this.runInterpolation(translation, interpolateParams));\n  }\n  runInterpolationOnDict(translations, interpolateParams) {\n    const result = {};\n    for (const key in translations) {\n      const res = this.runInterpolation(translations[key], interpolateParams);\n      if (res !== undefined) {\n        result[key] = res;\n      }\n    }\n    return result;\n  }\n  /**\n   * Returns the parsed result of the translations\n   */\n  getParsedResult(key, interpolateParams) {\n    return key instanceof Array ? this.getParsedResultForArray(key, interpolateParams) : this.getParsedResultForKey(key, interpolateParams);\n  }\n  getParsedResultForArray(key, interpolateParams) {\n    const result = {};\n    let observables = false;\n    for (const k of key) {\n      result[k] = this.getParsedResultForKey(k, interpolateParams);\n      observables = observables || isObservable(result[k]);\n    }\n    if (!observables) {\n      return result;\n    }\n    const sources = key.map(k => makeObservable(result[k]));\n    return forkJoin(sources).pipe(map(arr => {\n      const obj = {};\n      arr.forEach((value, index) => {\n        obj[key[index]] = value;\n      });\n      return obj;\n    }));\n  }\n  /**\n   * Gets the translated value of a key (or an array of keys)\n   * @returns the translated key, or an object of translated keys\n   */\n  get(key, interpolateParams) {\n    if (!isDefinedAndNotNull(key) || !key.length) {\n      throw new Error(`Parameter \"key\" is required and cannot be empty`);\n    }\n    // check if we are loading a new translation to use\n    if (this.pending) {\n      return this.loadingTranslations.pipe(concatMap(() => {\n        return makeObservable(this.getParsedResult(key, interpolateParams));\n      }));\n    }\n    return makeObservable(this.getParsedResult(key, interpolateParams));\n  }\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the translation changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  getStreamOnTranslationChange(key, interpolateParams) {\n    if (!isDefinedAndNotNull(key) || !key.length) {\n      throw new Error(`Parameter \"key\" is required and cannot be empty`);\n    }\n    return concat(defer(() => this.get(key, interpolateParams)), this.onTranslationChange.pipe(switchMap(() => {\n      const res = this.getParsedResult(key, interpolateParams);\n      return makeObservable(res);\n    })));\n  }\n  /**\n   * Returns a stream of translated values of a key (or an array of keys) which updates\n   * whenever the language changes.\n   * @returns A stream of the translated key, or an object of translated keys\n   */\n  stream(key, interpolateParams) {\n    if (!isDefinedAndNotNull(key) || !key.length) {\n      throw new Error(`Parameter \"key\" required`);\n    }\n    return concat(defer(() => this.get(key, interpolateParams)), this.onLangChange.pipe(switchMap(() => {\n      const res = this.getParsedResult(key, interpolateParams);\n      return makeObservable(res);\n    })));\n  }\n  /**\n   * Returns a translation instantly from the internal state of loaded translation.\n   * All rules regarding the current language, the preferred language of even fallback languages\n   * will be used except any promise handling.\n   */\n  instant(key, interpolateParams) {\n    if (!isDefinedAndNotNull(key) || key.length === 0) {\n      throw new Error('Parameter \"key\" is required and cannot be empty');\n    }\n    const result = this.getParsedResult(key, interpolateParams);\n    if (isObservable(result)) {\n      if (Array.isArray(key)) {\n        return key.reduce((acc, currKey) => {\n          acc[currKey] = currKey;\n          return acc;\n        }, {});\n      }\n      return key;\n    }\n    return result;\n  }\n  /**\n   * Sets the translated value of a key, after compiling it\n   */\n  set(key, translation, lang = this.getCurrentLang()) {\n    this.store.setTranslations(lang, insertValue(this.store.getTranslations(lang), key, isString(translation) ? this.compiler.compile(translation, lang) : this.compiler.compileTranslations(translation, lang)), false);\n  }\n  /**\n   * Allows reloading the lang file from the file\n   */\n  reloadLang(lang) {\n    this.resetLang(lang);\n    return this.loadAndCompileTranslations(lang);\n  }\n  /**\n   * Deletes inner translation\n   */\n  resetLang(lang) {\n    delete this._translationRequests[lang];\n    this.store.deleteTranslations(lang);\n  }\n  /**\n   * Returns the language code name from the browser, e.g. \"de\"\n   */\n  static getBrowserLang() {\n    if (typeof window === \"undefined\" || !window.navigator) {\n      return undefined;\n    }\n    const browserLang = this.getBrowserCultureLang();\n    return browserLang ? browserLang.split(/[-_]/)[0] : undefined;\n  }\n  /**\n   * Returns the culture language code name from the browser, e.g. \"de-DE\"\n   */\n  static getBrowserCultureLang() {\n    if (typeof window === \"undefined\" || typeof window.navigator === \"undefined\") {\n      return undefined;\n    }\n    return window.navigator.languages ? window.navigator.languages[0] : window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n  }\n  getBrowserLang() {\n    return TranslateService.getBrowserLang();\n  }\n  getBrowserCultureLang() {\n    return TranslateService.getBrowserCultureLang();\n  }\n  /** Deprecations **/\n  /**\n   * @deprecated use `getFallbackLang()`\n   */\n  get defaultLang() {\n    return this.getFallbackLang();\n  }\n  /**\n   * The lang currently used\n   * @deprecated use `getCurrentLang()`\n   */\n  get currentLang() {\n    return this.store.getCurrentLang();\n  }\n  /**\n   * @deprecated use `getLangs()`\n   */\n  get langs() {\n    return this.store.getLanguages();\n  }\n  /**\n   * Sets the  language to use as a fallback\n   * @deprecated use setFallbackLanguage()\n   */\n  setDefaultLang(lang) {\n    return this.setFallbackLang(lang);\n  }\n  /**\n   * Gets the fallback language used\n   * @deprecated use getFallbackLang()\n   */\n  getDefaultLang() {\n    return this.getFallbackLang();\n  }\n  static ɵfac = function TranslateService_Factory(t) {\n    return new (t || TranslateService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslateService,\n    factory: TranslateService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateService, [{\n    type: Injectable\n  }], () => [], null);\n})();\nclass TranslateDirective {\n  translateService = inject(TranslateService);\n  element = inject(ElementRef);\n  _ref = inject(ChangeDetectorRef);\n  key;\n  lastParams;\n  currentParams;\n  onLangChangeSub;\n  onFallbackLangChangeSub;\n  onTranslationChangeSub;\n  set translate(key) {\n    if (key) {\n      this.key = key;\n      this.checkNodes();\n    }\n  }\n  set translateParams(params) {\n    if (!equals(this.currentParams, params)) {\n      this.currentParams = params;\n      this.checkNodes(true);\n    }\n  }\n  constructor() {\n    // subscribe to onTranslationChange event, in case the translations of the current lang change\n    if (!this.onTranslationChangeSub) {\n      this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe(event => {\n        if (event.lang === this.translateService.currentLang) {\n          this.checkNodes(true, event.translations);\n        }\n      });\n    }\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChangeSub) {\n      this.onLangChangeSub = this.translateService.onLangChange.subscribe(event => {\n        this.checkNodes(true, event.translations);\n      });\n    }\n    // subscribe to onFallbackLangChange event, in case the fallback language changes\n    if (!this.onFallbackLangChangeSub) {\n      this.onFallbackLangChangeSub = this.translateService.onFallbackLangChange.subscribe(event => {\n        void event;\n        this.checkNodes(true);\n      });\n    }\n  }\n  ngAfterViewChecked() {\n    this.checkNodes();\n  }\n  checkNodes(forceUpdate = false, translations) {\n    let nodes = this.element.nativeElement.childNodes;\n    // if the element is empty\n    if (!nodes.length) {\n      // we add the key as content\n      this.setContent(this.element.nativeElement, this.key);\n      nodes = this.element.nativeElement.childNodes;\n    }\n    nodes.forEach(n => {\n      const node = n;\n      if (node.nodeType === 3) {\n        // node type 3 is a text node\n        let key;\n        if (forceUpdate) {\n          node.lastKey = null;\n        }\n        if (isDefinedAndNotNull(node.lookupKey)) {\n          key = node.lookupKey;\n        } else if (this.key) {\n          key = this.key;\n        } else {\n          const content = this.getContent(node);\n          const trimmedContent = content.trim();\n          if (trimmedContent.length) {\n            node.lookupKey = trimmedContent;\n            // we want to use the content as a key, not the translation value\n            if (content !== node.currentValue) {\n              key = trimmedContent;\n              // the content was changed from the user, we'll use it as a reference if needed\n              node.originalContent = content || node.originalContent;\n            } else if (node.originalContent) {\n              // the content seems ok, but the lang has changed\n              // the current content is the translation, not the key, use the last real content as key\n              key = node.originalContent.trim();\n            }\n          }\n        }\n        this.updateValue(key, node, translations);\n      }\n    });\n  }\n  updateValue(key, node, translations) {\n    if (key) {\n      if (node.lastKey === key && this.lastParams === this.currentParams) {\n        return;\n      }\n      this.lastParams = this.currentParams;\n      const onTranslation = res => {\n        if (res !== key || !node.lastKey) {\n          node.lastKey = key;\n        }\n        if (!node.originalContent) {\n          node.originalContent = this.getContent(node);\n        }\n        if (isString(res)) {\n          node.currentValue = res;\n        } else if (!isDefinedAndNotNull(res)) {\n          node.currentValue = node.originalContent || key;\n        } else {\n          node.currentValue = JSON.stringify(res);\n        }\n        // we replace in the original content to preserve spaces that we might have trimmed\n        this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n        this._ref.markForCheck();\n      };\n      if (isDefinedAndNotNull(translations)) {\n        const res = this.translateService.getParsedResult(key, this.currentParams);\n        if (isObservable(res)) {\n          res.subscribe({\n            next: onTranslation\n          });\n        } else {\n          onTranslation(res);\n        }\n      } else {\n        this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n      }\n    }\n  }\n  getContent(node) {\n    return isDefinedAndNotNull(node.textContent) ? node.textContent : node.data;\n  }\n  setContent(node, content) {\n    if (isDefinedAndNotNull(node.textContent)) {\n      node.textContent = content;\n    } else {\n      node.data = content;\n    }\n  }\n  ngOnDestroy() {\n    if (this.onLangChangeSub) {\n      this.onLangChangeSub.unsubscribe();\n    }\n    if (this.onFallbackLangChangeSub) {\n      this.onFallbackLangChangeSub.unsubscribe();\n    }\n    if (this.onTranslationChangeSub) {\n      this.onTranslationChangeSub.unsubscribe();\n    }\n  }\n  static ɵfac = function TranslateDirective_Factory(t) {\n    return new (t || TranslateDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TranslateDirective,\n    selectors: [[\"\", \"translate\", \"\"], [\"\", \"ngx-translate\", \"\"]],\n    inputs: {\n      translate: \"translate\",\n      translateParams: \"translateParams\"\n    },\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: \"[translate],[ngx-translate]\",\n      standalone: true\n    }]\n  }], () => [], {\n    translate: [{\n      type: Input\n    }],\n    translateParams: [{\n      type: Input\n    }]\n  });\n})();\nclass TranslatePipe {\n  translate = inject(TranslateService);\n  _ref = inject(ChangeDetectorRef);\n  value = \"\";\n  lastKey = null;\n  lastParams = [];\n  onTranslationChange;\n  onLangChange;\n  onFallbackLangChange;\n  updateValue(key, interpolateParams, translations) {\n    const onTranslation = res => {\n      this.value = res !== undefined ? res : key;\n      this.lastKey = key;\n      this._ref.markForCheck();\n    };\n    if (translations) {\n      const res = this.translate.getParsedResult(key, interpolateParams);\n      if (isObservable(res)) {\n        res.subscribe(onTranslation);\n      } else {\n        onTranslation(res);\n      }\n    }\n    this.translate.get(key, interpolateParams).subscribe(onTranslation);\n  }\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  transform(query, ...args) {\n    if (!query || !query.length) {\n      return query;\n    }\n    // if we ask another time for the same key, return the last value\n    if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n      return this.value;\n    }\n    let interpolateParams = undefined;\n    if (isDefinedAndNotNull(args[0]) && args.length) {\n      if (isString(args[0]) && args[0].length) {\n        // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n        // this is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n        const validArgs = args[0].replace(/(')?([a-zA-Z0-9_]+)(')?(\\s)?:/g, '\"$2\":').replace(/:(\\s)?(')(.*?)(')/g, ':\"$3\"');\n        try {\n          interpolateParams = JSON.parse(validArgs);\n        } catch (e) {\n          void e;\n          throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n        }\n      } else if (isDict(args[0])) {\n        interpolateParams = args[0];\n      }\n    }\n    // store the query in case it changes\n    this.lastKey = query;\n    // store the params in case they change\n    this.lastParams = args;\n    // set the value\n    this.updateValue(query, interpolateParams);\n    // if there is a subscription to onLangChange, clean it\n    this._dispose();\n    // subscribe to onTranslationChange event, in case the translations change\n    if (!this.onTranslationChange) {\n      this.onTranslationChange = this.translate.onTranslationChange.subscribe(event => {\n        if (this.lastKey && event.lang === this.translate.getCurrentLang() || event.lang === this.translate.getFallbackLang()) {\n          this.lastKey = null;\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n    // subscribe to onLangChange event, in case the language changes\n    if (!this.onLangChange) {\n      this.onLangChange = this.translate.onLangChange.subscribe(event => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams, event.translations);\n        }\n      });\n    }\n    // subscribe to onDefaultLangChange event, in case the fallback language changes\n    if (!this.onFallbackLangChange) {\n      this.onFallbackLangChange = this.translate.onFallbackLangChange.subscribe(() => {\n        if (this.lastKey) {\n          this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n          this.updateValue(query, interpolateParams);\n        }\n      });\n    }\n    return this.value;\n  }\n  /**\n   * Clean any existing subscription to change events\n   */\n  _dispose() {\n    if (typeof this.onTranslationChange !== \"undefined\") {\n      this.onTranslationChange.unsubscribe();\n      this.onTranslationChange = undefined;\n    }\n    if (typeof this.onLangChange !== \"undefined\") {\n      this.onLangChange.unsubscribe();\n      this.onLangChange = undefined;\n    }\n    if (typeof this.onFallbackLangChange !== \"undefined\") {\n      this.onFallbackLangChange.unsubscribe();\n      this.onFallbackLangChange = undefined;\n    }\n  }\n  ngOnDestroy() {\n    this._dispose();\n  }\n  static ɵfac = function TranslatePipe_Factory(t) {\n    return new (t || TranslatePipe)();\n  };\n  static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"translate\",\n    type: TranslatePipe,\n    pure: false,\n    standalone: true\n  });\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TranslatePipe,\n    factory: TranslatePipe.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslatePipe, [{\n    type: Injectable\n  }, {\n    type: Pipe,\n    args: [{\n      name: \"translate\",\n      standalone: true,\n      pure: false // required to update the value when the promise is resolved\n    }]\n  }], null, null);\n})();\nfunction provideTranslateLoader(loader) {\n  return {\n    provide: TranslateLoader,\n    useClass: loader\n  };\n}\nfunction provideTranslateCompiler(compiler) {\n  return {\n    provide: TranslateCompiler,\n    useClass: compiler\n  };\n}\nfunction provideTranslateParser(parser) {\n  return {\n    provide: TranslateParser,\n    useClass: parser\n  };\n}\nfunction provideMissingTranslationHandler(handler) {\n  return {\n    provide: MissingTranslationHandler,\n    useClass: handler\n  };\n}\nfunction provideTranslateService(config = {}) {\n  return defaultProviders({\n    compiler: provideTranslateCompiler(TranslateNoOpCompiler),\n    parser: provideTranslateParser(TranslateDefaultParser),\n    loader: provideTranslateLoader(TranslateNoOpLoader),\n    missingTranslationHandler: provideMissingTranslationHandler(DefaultMissingTranslationHandler),\n    ...config\n  }, true);\n}\nfunction provideChildTranslateService(config = {}) {\n  return defaultProviders({\n    extend: true,\n    ...config\n  }, false);\n}\nfunction defaultProviders(config = {}, provideStore) {\n  const providers = [];\n  if (config.loader) {\n    providers.push(config.loader);\n  }\n  if (config.compiler) {\n    providers.push(config.compiler);\n  }\n  if (config.parser) {\n    providers.push(config.parser);\n  }\n  if (config.missingTranslationHandler) {\n    providers.push(config.missingTranslationHandler);\n  }\n  if (provideStore) {\n    providers.push(TranslateStore);\n  }\n  if (config.useDefaultLang || config.defaultLanguage) {\n    console.warn(\"The `useDefaultLang` and `defaultLanguage` options are deprecated. Please use `fallbackLang` instead.\");\n    if (config.useDefaultLang === true && config.defaultLanguage) {\n      config.fallbackLang = config.defaultLanguage;\n    }\n  }\n  const serviceConfig = {\n    fallbackLang: config.fallbackLang ?? null,\n    lang: config.lang,\n    extend: config.extend ?? false\n  };\n  providers.push({\n    provide: TRANSLATE_SERVICE_CONFIG,\n    useValue: serviceConfig\n  });\n  providers.push({\n    provide: TranslateService,\n    useClass: TranslateService,\n    deps: [TranslateStore, TranslateLoader, TranslateCompiler, TranslateParser, MissingTranslationHandler, TRANSLATE_SERVICE_CONFIG]\n  });\n  return providers;\n}\nclass TranslateModule {\n  /**\n   * Use this method in your root module to provide the TranslateService\n   */\n  static forRoot(config = {}) {\n    return {\n      ngModule: TranslateModule,\n      providers: [...defaultProviders({\n        compiler: provideTranslateCompiler(TranslateNoOpCompiler),\n        parser: provideTranslateParser(TranslateDefaultParser),\n        loader: provideTranslateLoader(TranslateNoOpLoader),\n        missingTranslationHandler: provideMissingTranslationHandler(DefaultMissingTranslationHandler),\n        ...config\n      }, true)]\n    };\n  }\n  /**\n   * Use this method in your other (non-root) modules to import the directive/pipe\n   */\n  static forChild(config = {}) {\n    return {\n      ngModule: TranslateModule,\n      providers: [...defaultProviders(config, config.isolate ?? false)]\n    };\n  }\n  static ɵfac = function TranslateModule_Factory(t) {\n    return new (t || TranslateModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TranslateModule,\n    imports: [TranslatePipe, TranslateDirective],\n    exports: [TranslatePipe, TranslateDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [TranslatePipe, TranslateDirective],\n      exports: [TranslatePipe, TranslateDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DefaultMissingTranslationHandler, ITranslateService, MissingTranslationHandler, TRANSLATE_SERVICE_CONFIG, TranslateCompiler, TranslateDefaultParser, TranslateDirective, TranslateLoader, TranslateModule, TranslateNoOpCompiler, TranslateNoOpLoader, TranslateParser, TranslatePipe, TranslateService, TranslateStore, _, defaultProviders, equals, getValue, insertValue, isArray, isDefined, isDefinedAndNotNull, isDict, isFunction, isObject, isString, mergeDeep, provideChildTranslateService, provideMissingTranslationHandler, provideTranslateCompiler, provideTranslateLoader, provideTranslateParser, provideTranslateService, setValue };\n"],
  "mappings": "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",
  "names": ["key"]
}
